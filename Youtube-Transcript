# Azure Virtual Machine Configuration - Step-by-Step

Alright, we're going to start off with this Azure by creating a resource group with the name of 'JimarRG.' It's going to be very quick. I'm already ready to go, going to switch to making a virtual machine. I'm going to use that Resource Group that I just created, call it 'Jagore Lab 1' or 'Jagore VM1'. I made that mistake earlier. Let's use 'Windows 10 Pro' as our image, showing you all these options with the drop-downs. Want to use two virtual CPUs. Username: 'jagorelab1', password: 'password1'. Here's my mistake: I forgot to check the Windows 11 verification. Alright, we're going to go ahead and create that, and it should take about a minute to make. It already has finished. Going to go ahead and create my second virtual machine. This one's going to be 'Ubuntu,' and we're going to make sure we do have that 'vm1 vnet' in there. Go ahead and create 'JugyMore VM2' for the name, use the same Resource Group as before and use that 'Ubuntu server'. It's already checked on two virtual CPUs. Going to use the username as 'jagorelab2', password 'password1'. 

Jumping to networking, and see we're on the 'vm1 vnet,' which is the most important thing of creating this second virtual machine. Go ahead and hit create, and it'll take another minute to create.

Now, we're going to go ahead and connect to our virtual machines. We're going to navigate around Azure and find our virtual machine public IP address and click on the VM1. Copy the public IP, paste it into Remote Desktop Connection, use my username 'jagorelab1' and here's my password. It will take a few minutes to connect. We'll see my second virtual machine has loaded up. We will note that we have a private IP address of '10.0.0.4' on our VM1 and '10.0.0.6' on our VM2. We will use those private IPs to Ping each other a little bit later on.

To start with my Remote Desktop Connection, what I want to do is I'll show you a couple things here on the command prompt just to kind of show you. This is lab one on VM1 and my private IP. We're going to continue and go to install 'Wireshark', which will allow us to kind of see what's going on with our internet traffic. So, we'll just do a simple Bing search for 'Wireshark'. Should be a quick download. We'll have a little bit of dead noise since this process does take quite a bit of time. We're running on two virtual CPUs, it's a fairly slow virtual machine. I'm just going to 'Next' all the way through this. So, we're not going to do anything special with any checkboxes, and I'll just kind of leave it.

Alright, so now what we're going to do is we're going to look up our virtual machine private IP address for VM2 because on VM1 we want to Ping it. Going to run a ping through the command line, just a simple four-step ping reply between '10.0.0.4' and '10.0.0.6'. You can see it all transferred through, no problem. Now I'm going to run an infinite ping '-t' to '10.0.0.6', and here in Wireshark, we can kind of see the continuous traffic interaction between the two.

So, what I want to do next here is kind of demonstrate the controls here within Azure. I'm going to go into my network security groups and in VM2, I want to block all ICMP traffic. So, we're going to block the ICMP protocol, set the priority to '200', and we're going to just name it 'Deny ICMP Ping Anywhere'. Going to add it. What I've learned is that this so far does not really do anything for the interaction between the two computers. So, what we'll need to do is jump back into Azure and hit refresh. Then we should see, okay, in the command line request timed out and Wireshark, you can see no response found. So, we'll kind of take a peek at that just kind of, it's just dead interaction between the two. You just see '10.0.0.4' as our source and destination, just nothing happens.

So, now what we can do next is kind of reallow the traffic. All I did was just add the rule. I don't think I refreshed, so let's go back through and refresh, see if anything happens. I think when I went through this the first time, it just had to control C out of the command line, but it took me a minute to figure that out. Hit refresh a second time, still nothing happens, but it's just as simple as controlling C out and then just running the Ping again, and then we can see again that there's continuous traffic between '10.0.0.6' and '10.0.0.4'.

Now, what we're going to do is jump into our second virtual machine in our and identify our private IP address '10.0.0.6', as well as our username. We're going to use this to do an SSH command in the Windows command prompt and identify the activity through Wireshark. Within Wireshark, I'm going to run the SSH filter. Currently, there's no activity until I run the command SSH 'jimar lab 2' at '10.0.0.6'. We can see the activity in the Wireshark software to the right. So, now what I can do is basically run any commands from my VM1 through the Windows command line. You can see the working directory. I'm creating a 'JGilmore Cyber.txt' text file. While I'm doing that, anytime I type any text, you can see the activity in Wireshark. You can see the directories as well as my interaction between everything.

Now what we're going to do is look up some DHCP traffic. I typed in DNS but I mistakenly just needed to do DHCP, because that's what's going to show up when I do an 'IP config /renew'. So, we've got the DHCP command within Wireshark and you can see as soon as I executed the Windows command 'IP config /renew', you saw the interaction within. The next filter we're going to use is the DNS filter within Wireshark. I'm going to run a command and look up 'indeed.com'. You can see the batch of information that was filtered with the DNS command. But we can do as well as instead of just using DNS as a filter, we can use the UDP Port '53', and it will return the same bit of information. This time I'm going to do an NS lookup on 'linkedin.com', and then basically the same results as using the DNS filter. Now we're going to look up remote desktop activity. I thought I could just type in 'RDP' as a filter, but no, that is not the case. I typed in TCP ports '3389', and you can see the continuous spam of activity for the remote desktop connection.
